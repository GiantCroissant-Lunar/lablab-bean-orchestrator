name: Spec Apply Tasks (auto-apply)

on:
  workflow_dispatch:
    inputs:
      spec_id:
        description: "Spec ID (e.g., 003)"
        required: true
      slug:
        description: "Slug (e.g., tiered-architecture)"
        required: true
      repo:
        description: "Target repo (e.g., lablab-bean-console)"
        required: true
      branch:
        description: "Branch to push to (e.g., spec/003-tiered-architecture/<repo>-gh)"
        required: true
      task_id:
        description: "Optional single task id (e.g., T-3)"
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      ORG: ${{ vars.LABLAB_ORG }}
      SPEC: ${{ inputs.spec_id }}
      SLUG: ${{ inputs.slug }}
      REPO: ${{ inputs.repo }}
      BRANCH: ${{ inputs.branch }}
      TASK_ID: ${{ inputs.task_id }}
    steps:
      - name: Checkout orchestrator
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Checkout target repo at branch
        uses: actions/checkout@v4
        with:
          repository: ${{ env.ORG }}/${{ env.REPO }}
          token: ${{ secrets.LABLAB_GH_PAT }}
          path: target
          ref: ${{ env.BRANCH }}

      - name: Apply tasks via LLM patch
        env:
          GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
          GLM_BASE_URL: ${{ secrets.GLM_BASE_URL }}
          GLM_MODEL: ${{ vars.GLM_MODEL }}
        run: |
          set -euxo pipefail
          if [ -z "${TASK_ID}" ]; then \
            python -m agents.langgraph.apply_task --spec "${SPEC}" --slug "${SLUG}" --repo "${REPO}" --branch "${BRANCH}"; \
          else \
            python -m agents.langgraph.apply_task --spec "${SPEC}" --slug "${SLUG}" --repo "${REPO}" --branch "${BRANCH}" --task-id "${TASK_ID}"; \
          fi
